# All-in-One solution (still starts different containers) 
# for the usermanagement microservices 
version: '3'
services:
  zookeeper:
    container_name: zookeeper
    restart: always
    image: docker.io/bitnami/zookeeper:3.8

    volumes:
      - "zookeeper-volume:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      privatenet:

  kafka:
    container_name: kafka
    restart: always
    image: docker.io/bitnami/kafka:3.4

    volumes:
      - "kafka-volume:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    ports:
      - 9094:9094
    networks:
      privatenet:

  kafka-topics-generator:
    image: docker.io/bitnami/kafka:3.4
    depends_on:
      - kafka
    command: >
      bash -c
        "sleep 5s &&
        kafka-topics.sh --create --topic=usermanagement --if-not-exists --bootstrap-server=kafka:9092"
    networks:
      privatenet:

  usermanagement-db:
    image: postgres
    container_name: users-db
    restart: always

    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: usersmanagement
      POSTGRES_DB: usersmanagement

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U usersmanagement" ]
      interval: 5s
      timeout: 5s
      retries: 10

    volumes:
      - usersmanagement-db:/var/lib/postgresql/data

    networks:
      - usermanagementnet
      - dbnet

  usermanagement-app:
    image: dak4408/travma-usermanagement-backend:latest
    container_name: users-app
    restart: always
    depends_on:
      usermanagement-db:
        condition: service_healthy
    environment:
      DOMAIN: http://localhost:8081
      API_URL: :8082
      
      SALT: your-secret-salt
      JWT_SECRET: your-jwt-secret

      # Change to true when using tls
      PRODUCTION: false
      
      # Gives additional information of the webserver
      DEBUG: true

      # BROKERS should be just one value
      BROKERS: localhost:9092
      TOPIC: usermanagement

      # DB
      DB_HOST: users-db
      DB_USER: usersmanagement
      DB_PASSWORD: password
      DB_NAME: usersmanagement
      DB_PORT: 5432
      SSL_TLS: disable
      TIMEZONE: Europe/Berlin

    ports:
      - "8082:8082"
    networks:
      - usermanagementnet
      - dbnet
  
  usermanagement-web:
    image: dak4408/travma-usermanagement-frontend:non-aio
    container_name: usermanagement-web
    restart: always
    environment:
      API_URL: http://localhost:8081/api/v1
      CHECKOUT_URL: http://checkout-frontend:8083/#/cart
      TRAVELMANAGEMENT_URL: http://travelmngt-frontend:8085/#/travma
      MONITORING_URL: http://localhost:8087/*
    
    networks: 
      - usermanagementnet
    ports:
      - "8081:8081"
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf"

volumes:
  usersmanagement-db:
  zookeeper-volume:
  kafka-volume:

networks:
  publicnet:
  privatenet:
  usermanagementnet:
  dbnet:
