# Runs when PR open event emits if the usermanagement directory changed 
# Used for development - build and test which are then uploaded as artifacts for analysis
name: Dev - Usermanagement backend - security and build 
run-name: ${{ github.actor }} started usermanagement pipeline
on:
  pull_request:
    types: opened
    branches:
      - develop
    paths:
      - ./usermanagement/backend
  workflow_call:

defaults:
  run: 
    shell: bash
    working-directory: "./usermanagement/backend"

jobs:
  security:
    name: Security 
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.21.5']
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install dependencies
        run: | 
          go get .
          go install golang.org/x/vuln/cmd/govulncheck@latest
      - name: Check
        run: govulncheck -json ./... > VulnerabilityResults-${{ matrix.go-version }}.json
      - name: Upload Go vulnerability results
        uses: actions/upload-artifact@v3
        with:
          name: Security-results-${{ matrix.go-version }}
          path: VulnerabilityResults-${{ matrix.go-version }}.json
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.21.5']
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install dependencies
        run: go get .
      - name: Build
        run: go build -v ./...
      - name: Test
        run: go test -json > TestResults-${{ matrix.go-version }}.json
      - name: Upload Go test results
        uses: actions/upload-artifact@v3
        with:
          name: Go-results-${{ matrix.go-version }}
          path: TestResults-${{ matrix.go-version }}.json