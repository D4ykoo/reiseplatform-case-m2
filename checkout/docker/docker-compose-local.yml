version: "3.7"
services:
  zookeeper:
    container_name: zookeeper
    restart: always
    image: docker.io/bitnami/zookeeper:3.8

    volumes:
      - "zookeeper-volume:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      privatenet:

  kafka:
    container_name: kafka
    restart: always
    image: docker.io/bitnami/kafka:3.4

    volumes:
      - "kafka-volume:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    ports:
      - 9094:9094
    networks:
      privatenet:

  kafka-topics-generator:
    image: docker.io/bitnami/kafka:3.4
    depends_on:
      - kafka
    command: >
      bash -c
        "sleep 5s &&
        kafka-topics.sh --create --topic=checkout --if-not-exists --bootstrap-server=kafka:9092 &&
        kafka-topics.sh --create --topic=travelmanagement --if-not-exists --bootstrap-server=kafka:9092 &&
        kafka-topics.sh --create --topic=usermanagement --if-not-exists --bootstrap-server=kafka:9092"
    networks:
      privatenet:

  checkout-db:
    image: postgres
    container_name: checkout-db
    environment:
      POSTGRES_USER: checkout
      POSTGRES_PASSWORD: password
      POSTGRES_DB: checkout
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U checkout" ]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - checkout-db:/var/lib/postgresql/data
    restart: always
    ports: 
      - "5432:5432"
    networks:
      - privatenet

  checkout-app:
    image: checkout-backend:latest
    container_name: checkout-app
    restart: always
    depends_on:
      checkout-db:
        condition: service_healthy
      kafka-topics-generator:
        condition: service_completed_successfully
    environment:
      API_URL: "0.0.0.0"
      API_PORT: "8084"
      TRAVEL_API_URL: "http://localhost:8086/api/v1/"
      JWT_SECRET: "your-jwt-secret"
      KAFKA_URL: "kafka:9092"
      TOPIC: "checkout"
      DATABASE_URL: "postgres://checkout:password@checkout-db:5432/checkout"
    ports:
      - "8084:8084"
    networks:
      publicnet:
      privatenet:
  
  checkout-web:
    image: checkout-frontend:latest
    container_name: checkout-web
    restart: always
    environment:
      API_URL: "http://localhost:8083/api/v1"
      USERMANAGEMENT_URL: "http://localhost:8081/users"
      HOTELMANAGEMENT_URL: "http://localhost:8085/travma"
      MONITORING_URL: "http://localhost:8087/*"    
    depends_on:
      - checkout-app
    ports:
      - "8083:8083"
    networks:
      privatenet:
      publicnet:
    volumes:
      - ../frontend/nginx.conf:/etc/nginx/nginx.conf


volumes:
  kafka-volume:
  zookeeper-volume:
  checkout-db:
networks:
  privatenet:
  publicnet: